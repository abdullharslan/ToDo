@baseUrl = http://localhost:5064/api
@token = eyJhbG...  // Login'den sonra buraya token'ı yapıştırın

### Auth İşlemleri ###

### Register - Yeni Kullanıcı Kaydı
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "firstName": "Test",
  "lastName": "User",
  "username": "testuser",
  "password": "Test123!"
}

### Login - Kullanıcı Girişi
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "testuser",
  "password": "Test123!"
}

### UserExists - Kullanıcı Adı Kontrolü
GET {{baseUrl}}/auth/exists/testuser

### User (Profil) İşlemleri ###

### Get User - Kullanıcı Bilgilerini Getir
GET {{baseUrl}}/user/1
Authorization: Bearer {{token}}

### Update User - Kullanıcı Bilgilerini Güncelle
PUT {{baseUrl}}/user/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "id": 1,
  "firstName": "Updated",
  "lastName": "User",
  "username": "testuser",
  "password": "Test123!"
}

### Delete User - Kullanıcı Sil (Soft Delete)
DELETE {{baseUrl}}/user/1
Authorization: Bearer {{token}}

### ToDo İşlemleri ###

### Get All Todos - Tüm Görevleri Getir
GET {{baseUrl}}/todoitem
Authorization: Bearer {{token}}

### Get Todo - Belirli Bir Görevi Getir
GET {{baseUrl}}/todoitem/1
Authorization: Bearer {{token}}

### Get Filtered Todos - Filtrelenmiş Görevleri Getir
GET {{baseUrl}}/todoitem?isCompleted=true
Authorization: Bearer {{token}}

### Create Todo - Yeni Görev Oluştur
POST {{baseUrl}}/todoitem
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "title": "Test Görevi",
  "description": "Bu bir test görevidir",
  "isCompleted": false
}

### Update Todo - Görev Güncelle
PUT {{baseUrl}}/todoitem/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "id": 1,
  "title": "Güncellenmiş Görev",
  "description": "Bu görev güncellendi",
  "isCompleted": true,
  "userId": 1
}

### Delete Todo - Görev Sil (Soft Delete)
DELETE {{baseUrl}}/todoitem/1
Authorization: Bearer {{token}}